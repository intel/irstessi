.\" Copyright (c) 2011, Intel Corporation
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions are met:
.\"
.\"	* Redistributions of source code must retain the above copyright 
.\"	  notice, this list of conditions and the following disclaimer.
.\"	* Redistributions in binary form must reproduce the above copyright 
.\"	  notice, this list of conditions and the following disclaimer in the 
.\"	  documentation 
.\"	  and/or other materials provided with the distribution.
.\"	* Neither the name of Intel Corporation nor the names of its 
.\"	  contributors may be used to endorse or promote products derived from 
.\"	  this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH SsiDiskUnlock 3 "September 28, 2011" "version 0.1" "Linux Programmer's Reference"
.SH NAME
SsiDiskUnlock - unlocks a locked disk
.SH SYNOPSIS
.PP
.B #include <ssi.h>

.BI "SSI_Status SsiDiskUnlock(SSI_Handle " diskHandle ", "
.BI "SSI_DiskUnlockInfo *" unlockInfo ");"

\fB#define SSI_DISK_PASSWORD_LENGTH 32
.br
typedef struct _SSI_DiskUnlockInfo
{ 
    SSI_Char diskPassword[SSI_DISK_PASSWORD_LENGTH];     
    SSI_Bool userLevelPassword;       //true = user, false = master
.br
} SSI_DiskUnlockInfo;
\fR

.SH DESCRIPTION
.PP
.B Note:
This function is here for compatibility purposes only. Not 
implemented under \fBLinux\fR.

Unlocks a locked disk.  Disk must be locked to perform this operation.
.PP
.B Input parameters
.IP
\fBdiskHandle\fR - Handle to a locked disk.
.br
\fBunlockInfo\fR - Specifies the password to use and whether the password is 
the user or master password for the drive.
.PP
.B Return value
.IP
\fBSSI_StatusOk\fR - Indicates success.
.br
\fBSSI_StatusNotInitialized\fR - Indicates that the system is not initialized.
.br
\fBSSI_StatusInvalidState\fR - The disk is not in a valid state for this 
operation.
.br
\fBSSI_StatusInvalidHandle\fR - An invalid handle was passed in.
.br
\fBSSI_StatusFailed\fR - The call failed to complete successfully.
.br
\fBSSI_StatusInvalidParameter\fR - A null parameter was passed in.
.br
\fBSSI_StatusRetriesExceeded\fR - The maximum number of unlock attempts has 
been exceeded for this disk.
.br
\fBSSI_StatusWrongPassword\fR - The password was incorrect.  The maximum 
number of unlock attempts has not been exceeded for this disk.
.br
\fBSSI_StatusNotSupported\fR - The action is not supported.
.PP
.B SSI_DiskUnlockInfo Fields
.IP
\fBdiskPassword\fR - The password used to unlock. Callers should recognize 
that the entire buffer represents the password, even if it contains a 
null-terminated string.  It is recommended that if a null-terminated string is 
passed in, all "unused" fields are set to a value of null (a.k.a. zero).
.br
\fBuserLevelPassword\fR - If true, the password is considered the user-level 
password, otherwise it is considered the master password, as defined by the 
ATA specification.
.SH SEE ALSO
\fBssi.h(\fR3\fB), ssi_types(\fR3\fB), ssi_defines(\fR3\fB), 
ssi_functions(\fR3\fB).\fR
.SH AUTHORS
Anna Czarnowska (anna.czarnowska@intel.com), 
Lukasz Orlowski (lukasz.orlowski@intel.com),
Artur Wojcik (artur.wojcik@intel.com)
