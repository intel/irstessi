.\" Copyright (c) 2011, Intel Corporation
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions are met:
.\"
.\"	* Redistributions of source code must retain the above copyright 
.\"	  notice, this list of conditions and the following disclaimer.
.\"	* Redistributions in binary form must reproduce the above copyright 
.\"	  notice, this list of conditions and the following disclaimer in the 
.\"	  documentation 
.\"	  and/or other materials provided with the distribution.
.\"	* Neither the name of Intel Corporation nor the names of its 
.\"	  contributors may be used to endorse or promote products derived from 
.\"	  this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH SsiWriteStorageArea 3 "September 28, 2011" "version 0.1" "Linux Programmer's Reference"
.SH NAME
SsiWriteStorageArea - writes the buffer to the specified storage area in 
metadata
.SH SYNOPSIS
.PP
.B #include <ssi.h>

.BI "SSI_Status SsiWriteStorageArea(SSI_Handle " deviceHandle ", "
.BI "SSI_StorageArea " storageArea ", void *" buffer ", "
.BI "SSI_Uint32 " bufferLen ");"

.SH DESCRIPTION
.PP
.B Note:
This function is here for compatibility purposes only. Not 
implemented under \fBLinux\fR.

Writes the buffer to the specified storage area in metadata.
.PP
.B Input parameters
.IP
\fBdeviceHandle\fR - Handle of an EndDevice, and Array or a Volume.
.br
\fBstorageArea\fR - The storage area to write to.
.br
\fBbufferLen\fR - The number of bytes to copy.
.PP
.B Output parameters
.IP
\fBbuffer\fR - Data to write into the specified storage area. 
.PP
.B Return value
.IP
\fBSSI_StatusOk\fR - The operation completed successfully.
.br
\fBSSI_StatusNotInitialized\fR - Indicates that the system has not been 
initialized.
.br
\fBSSI_StatusInvalidParameter\fR - The value of \fBstorageArea\fR is not valid.
.br
\fBSSI_StatusNotSupported\fR - This call is not supported on this system.
.br
\fBSSI_StatusFailed\fR - The call failed to complete successfully.
.br
\fBSSI_StatusInvalidState\fR - The specified storage area does not exist in 
metadata.
.br
\fBSSI_StatusDataExceedsLimits\fR - The
 specified storage area exists, but 
cannot support as much data as is specified by \fBbufferLen\fR.
.SH SEE ALSO
\fBssi.h(\fR3\fB), ssi_types(\fR3\fB), ssi_defines(\fR3\fB), 
ssi_functions(\fR3\fB), SsiReadStorageArea(\fR3\fB).\fR
.SH AUTHORS
Anna Czarnowska (anna.czarnowska@intel.com), 
Lukasz Orlowski (lukasz.orlowski@intel.com),
Artur Wojcik (artur.wojcik@intel.com)
