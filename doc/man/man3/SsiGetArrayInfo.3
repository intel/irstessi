.\" Copyright (c) 2011, Intel Corporation
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions are met:
.\"
.\"	* Redistributions of source code must retain the above copyright 
.\"	  notice, this list of conditions and the following disclaimer.
.\"	* Redistributions in binary form must reproduce the above copyright 
.\"	  notice, this list of conditions and the following disclaimer in the 
.\"	  documentation 
.\"	  and/or other materials provided with the distribution.
.\"	* Neither the name of Intel Corporation nor the names of its 
.\"	  contributors may be used to endorse or promote products derived from 
.\"	  this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH SsiGetArrayInfo 3 "September 28, 2011" "version 0.1" "Linux Programmer's Reference"
.SH NAME
SsiGetArrayInfo - returns a data structure containing array-specific data
.SH SYNOPSIS
.PP
.B #include <ssi.h>

.BI "SSI_Status SsiGetArrayInfo(SSI_Handle " session ", "
.BI "SSI_Handle " arrayHandle ", SSI_ArrayInfo *" info ");"

\fB#define SSI_ARRAY_NAME_LENGTH 21
.br
typedef struct _SSI_ArrayInfo
{
    SSI_Handle     arrayHandle;
    SSI_Char       name[SSI_ARRAY_NAME_LENGTH];
    SSI_ArrayState state;
    SSI_Uint64     totalSize;
    SSI_Uint64     freeSize;
    SSI_WriteCachePolicy writeCachePolicy;
    SSI_Uint32     numDisks;
    SSI_Uint32     numVolumes;
.br
} SSI_ArrayInfo;\fR

\fBtypedef enum _SSI_ArrayState 
{
    SSI_ArrayStateUnknown = 0,
    SSI_ArrayStateNormal,
    SSI_ArrayStateBusy
} SSI_ArrayState;\fR

.SH DESCRIPTION
.PP
Returns a data structure containing array-specific data.
.PP
.B Input parameters
.IP
\fBsession\fR - Either a valid session handle or \fBSSI_NULL_HANDLE\fR.
.br
\fBarrayHandle\fR - Handle of the array info to retrieve.
.PP
.B Output parameters
.IP
\fBinfo\fR - Data structure that contains the array-specific data.
.PP
.B Return value
.IP 
\fBSSI_StatusOk\fR - Indicates success.
.br
\fBSSI_StatusNotInitialized\fR - Indicates that the system is not initialized.
.br
\fBSSI_StatusInvalidHandle\fR - An invalid handle was passed in.
.br
\fBSSI_StatusInvalidParameter\fR - A null parameter was passed in.
.br
\fBSSI_StatusInvalidSession\fR - The session is not valid.
.PP
.B SSI_ArrayInfo fields
.IP
\fBarrayHandle\fR - Handle to this array.
.br
\fBname\fR - This is a null-terminated string representing the array. 
Array names should be unique across arrays within the same controller family.
.br
\fBstate\fR - Indicates current state of the array.
.br
\fBtotalSize\fR - Size of the array, as the sum of usable space on all array 
drives in Bytes.
.br
\fBfreeSize\fR - Amount of free usable space on all array drives in Bytes.
.br
\fBwriteCachePolicy\fR - Whether or not write cache is on, off or unknown.
.br
\fBnumDisks\fR - Number of disks in the array.
.br
\fBnumVolumes\fR - Number of volumes in the array.
.PP
.B SSI_ArrayState values
.IP
\fBSSI_ArrayStateUnknown\fR - The array is unknown.
.br
\fBSSI_ArrayStateNormal\fR - The array is in a normal, stable state.
.br
\fBSSI_ArrayStateBusy\fR - The array is currently in the middle of an 
operation. This would be the case if any of the following operations are 
underway: migration, rebuild, initialization, verify, disk addition, disk 
replacement, disk removal. Merely having a missing disk shall not trigger this 
state.
.SH SEE ALSO
\fBssi.h(\fR3\fB), ssi_types(\fR3\fB), ssi_defines(\fR3\fB), 
ssi_functions(\fR3\fB), SsiGetArrayHandles(\fR3\fB).\fR
.SH AUTHORS
Anna Czarnowska (anna.czarnowska@intel.com), 
Lukasz Orlowski (lukasz.orlowski@intel.com),
Artur Wojcik (artur.wojcik@intel.com)
