.\" Copyright (c) 2011, Intel Corporation
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions are met:
.\"
.\"	* Redistributions of source code must retain the above copyright 
.\"	  notice, this list of conditions and the following disclaimer.
.\"	* Redistributions in binary form must reproduce the above copyright 
.\"	  notice, this list of conditions and the following disclaimer in the 
.\"	  documentation 
.\"	  and/or other materials provided with the distribution.
.\"	* Neither the name of Intel Corporation nor the names of its 
.\"	  contributors may be used to endorse or promote products derived from 
.\"	  this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH SsiDiskMarkAsSpare 3 "September 28, 2011" "version 0.1" "Linux Programmer's Reference"
.SH NAME
SsiDiskMarkAsSpare - sets a disk to be a spare
.SH SYNOPSIS
.PP
.B #include <ssi.h>

.BI "SSI_Status SsiDiskMarkAsSpare(SSI_Handle " diskHandle ", "
.BI "SSI_Handle " arrayHandle ");"

.SH DESCRIPTION
.PP
This will set a disk to be a spare.  If an \fBarrayHandle\fR is 
\fBSSI_NULL_HANDLE\fR, the disk will be set as a global spare. If a valid 
\fBarrayHandle\fR is passed in, the disk will be used as a dedicated spare 
associated with the given array.

Support for both global and dedicated spares is considered optional. 
To determine if a given controller supports either of these sparing 
mechanisms, refer to the controller info.

The disk must be in a normal state and being used as a passthrough.
.PP
.B Input parameters
.IP
\fBdiskHandle\fR - Handle of the disk to use as a spare.
.br
\fBarrayHandle\fR - Handle of array to associate with the spare, or 
\fBSSI_NULL_HANDLE\fR if the disk is to be used as a global spare.  
.PP
.B Return value
.IP 
\fBSSI_StatusOk\fR - Indicates success.
.br
\fBSSI_StatusNotInitialized\fR - Indicates that the system is not initialized.
.br
\fBSSI_StatusInvalidState\fR - The disk is not in a valid state for this 
operation.
.br
\fBSSI_StatusInvalidHandle\fR - An invalid handle was passed in.
.br
\fBSSI_StatusFailed\fR - The call failed to complete successfully.
.br
\fBSSI_StatusNotSupported\fR - The action is not supported.
.SH SEE ALSO
\fBssi.h(\fR3\fB), ssi_types(\fR3\fB), ssi_defines(\fR3\fB), 
ssi_functions(\fR3\fB), SsiDiskMarkAsNormal(\fR3\fB), 
SsiDiskUnmarkAsSpare(\fR3\fB).\fR
.SH AUTHORS
Anna Czarnowska (anna.czarnowska@intel.com), 
Lukasz Orlowski (lukasz.orlowski@intel.com),
Artur Wojcik (artur.wojcik@intel.com)
